#########app.py#########
from flask import Flask, request, render_template
import pandas as pd
import mysql.connector
import os

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = 'uploads'
os.makedirs(app.config['UPLOAD_FOLDER'], exist_ok=True)

# Database config
db_config = {
    'host': 'localhost',
    'user': 'root',
    'password': '',
    'database': 'employee_db'
}

def insert_into_db(dataframe):
    connection = mysql.connector.connect(**db_config)
    cursor = connection.cursor()

    for _, row in dataframe.iterrows():
        cursor.execute("""
            INSERT INTO attendance (
                employee_name, date, day, time_in, time_out,
                late_arrival, early_departure, hours_worked, status
            ) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)
        """, (
            row['Employee Name'], row['Date'], row['Day'], row['In'],
            row['Out'], row['Late Arrival'], row['Early Departure'],
            row['Hourse Worked'], row['Status']
        ))

    connection.commit()
    cursor.close()
    connection.close()

def parse_csv_with_multiple_employees(filepath):
    with open(filepath, 'r') as file:
        lines = file.readlines()

    data = []
    current_employee = None

    for line in lines:
        line = line.strip()
        if not line:
            continue
        parts = line.split(',')

        # Detect employee name (1 column, no comma)
        if len(parts) == 1:
            current_employee = parts[0]
        # Skip header row
        elif parts[0].lower() == 'date':
            continue
        # Data row
        elif current_employee:
            data.append({
                'Employee Name': current_employee,
                'Date': parts[0],
                'Day': parts[1],
                'In': parts[2],
                'Out': parts[3],
                'Late Arrival': parts[4],
                'Early Departure': parts[5],
                'Hourse Worked': parts[6],
                'Status': parts[7] if len(parts) > 7 else ''
            })

    return pd.DataFrame(data)

@app.route('/')
def index():
    return render_template('upload.html')

@app.route('/upload', methods=['POST'])
def upload():
    file = request.files['file']
    if file.filename == '':
        return 'No selected file'

    filepath = os.path.join(app.config['UPLOAD_FOLDER'], file.filename)
    file.save(filepath)

    df = parse_csv_with_multiple_employees(filepath)
    insert_into_db(df)

    return 'CSV file uploaded and data inserted into database successfully!'

if __name__ == '__main__':
    app.run(debug=True)

#########end app.py#######

##########upload.html#######
<!DOCTYPE html>
<html>
<head>
    <title>Upload Excel</title>
</head>
<body>
    <h2>Upload Excel File</h2>
    <form method="POST" action="/upload" enctype="multipart/form-data">
        <input type="file" name="file" accept=".xlsx, .xls">
        <input type="submit" value="Upload">
    </form>
</body>
</html>
###########upload.html############






<?php
session_start();
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit;
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bay Booking System</title>
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<style>
/* Modal Background */
.custom-modal {
    display: none; /* Hide modal by default */
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    justify-content: center;
    align-items: center;
    z-index: 1000;
}

/* Modal Content */
.custom-modal-content {
    background: white;
    padding: 20px;
    border-radius: 8px;
    width: 50%;
    max-width: 500px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);
    text-align: center;
    position: relative;
}

/* Close Button */
.custom-close {
    position: absolute;
    top: 10px;
    right: 15px;
    font-size: 20px;
    cursor: pointer;
}


</style>
</head>
<body>


<!-- Navbar -->
<?php include 'navbar.php'; ?>

<?php
// index.php
include 'config.php';
include 'db.php';

date_default_timezone_set('Asia/Kolkata'); // Set timezone

// Get the selected date from query parameters or default to today
$selected_date = isset($_GET['date']) ? $_GET['date'] : date('Y-m-d');

// Prepare query to fetch the bookings for the selected date
$query = "SELECT requisition_no, start_time, end_time, ground_type FROM bookings WHERE DATE(proposed_date_time) = ? AND is_deleted = 0";
$stmt = $conn->prepare($query);
$stmt->bind_param("s", $selected_date);
$stmt->execute();
$result = $stmt->get_result();

// Store the booked slots in an array
$booked_slots = [];

while ($row = $result->fetch_assoc()) {
    $start_time = date('H:00:00', strtotime($row['start_time']));
    $end_time = date('H:00:00', strtotime($row['end_time']));

    $current_time = strtotime($start_time);
    $end_time_timestamp = strtotime($end_time);

    while ($current_time < $end_time_timestamp) {
        $temp_data = [
            'start' => date('H:00:00', $current_time),
            'end'   => date('H:00:00', $end_time_timestamp),
            'ground' => $row['ground_type'],
            'requisition_no' => $row['requisition_no']
        ];
        $booked_slots[] = $temp_data; // Add to main array
        $current_time = strtotime('+1 hour', $current_time);
    }
}


$stmt->close();

// Date navigation logic
$prev_date = date('Y-m-d', strtotime($selected_date . ' -1 day'));
$next_date = date('Y-m-d', strtotime($selected_date . ' +1 day'));
$selected_day = date('l', strtotime($selected_date));
$selected_month = date('m', strtotime($selected_date));
$selected_year = date('Y', strtotime($selected_date));

// Define available grounds
// Fetch ground names dynamically from ground_master table
$grounds = [];
$query = "SELECT ground_name FROM ground_master";
$result = $conn->query($query);

while ($row = $result->fetch_assoc()) {
    $grounds[] = $row['ground_name'];
}


$mergedCells = [];
?>


<?php

$booked_details = [];

$query = "SELECT MONTH(proposed_date_time) AS month, 
                 DATE(proposed_date_time) AS date, 
                 start_time, end_time, ground_type 
          FROM bookings 
          WHERE YEAR(proposed_date_time) = ? AND is_deleted = 0";

$stmt = $conn->prepare($query);
$stmt->bind_param("i", $selected_year);
$stmt->execute();
$result = $stmt->get_result();

while ($row = $result->fetch_assoc()) {
    $mon = (int)$row['month'];
    $ground = $row['ground_type'];

    $booked_details[$mon][$ground][] = [
        'date' => $row['date'],
        'start_time' => $row['start_time'],
        'end_time' => $row['end_time']
    ];
    
//     echo "<pre>";
// print_r($booked_details);
// echo "</pre>";

}

?>
<div class="maindiv mt-4">
    <h2 class="mb-3 text-center">Bay Booking System</h2>
    <div class="row">
        <div class="col-lg-2 col-md-2">
            <?php include 'calendar.php'; ?>
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#newBookingModal">
                New Booking
            </button>
        </div>
        <div class="col-lg-10 col-md-10" style="  padding-left: 60px;  padding-right: 15px;">
        <div class="row">
                <div class="col-lg-6 col-md-6 d-flex mb-2">
                    <a href="?date=<?= $prev_date ?>&month=<?= $selected_month ?>&year=<?= $selected_year ?>" class="btn btn-secondary btn-sm">&#9665;</a>
                    <a class="btn btn-secondary btn-sm"><?= $selected_date ?></a>
                    <a href="?date=<?= $next_date ?>&month=<?= $selected_month ?>&year=<?= $selected_year ?>" class="btn btn-secondary btn-sm">&#9655;</a>
                </div>  
                <div class="col-lg-6 col-md-6 d-flex justify-content-end mb-2">
    <a href="?view=day&date=<?= $selected_date ?>" class="btn btn-secondary btn-sm">Day</a>
    <a href="?view=month&year=<?= $selected_year ?>" class="btn btn-secondary btn-sm">Month</a>
    <a href="?view=year" class="btn btn-secondary btn-sm">Year</a>
</div>

            </div>
        
            
            <table class="table table-bordered table-striped">
    <thead class="table-dark">
    <tr>
            <th colspan="5" class="text-center">
                <a href="?date=<?= $prev_date ?>" class="btn btn-secondary">&#9665;</a>
                <?= $selected_day ?>, <?= $selected_date ?>
                <a href="?date=<?= $next_date ?>" class="btn btn-secondary">&#9655;</a>
            </th>
        </tr>
        <tr>
    <th class="text-center">
        <?php 
        // Determine the view mode (default to 'day' if not set)
        $view = isset($_GET['view']) ? $_GET['view'] : 'day';

        if ($view == 'day') {
            echo "$selected_day, $selected_date"; 
        } elseif ($view == 'month') {
            echo "Year: $selected_year";
        } elseif ($view == 'year') {
            echo "Last 10 Years";
        }
        ?>
    </th>

    <?php 
    // Display ground names dynamically
    foreach ($grounds as $ground) { 
        echo "<th>" . htmlspecialchars($ground) . "</th>"; 
    }
    ?>
</tr>

    </thead>
    <tbody>
        <?php
        if ($view == 'day') {
            // Daily view (9 AM - 7 PM) with booking logic
            for ($time = 9; $time < 20; $time++) { 
                $timeFormatted = sprintf("%02d:00:00", $time);
                $endTimeFormatted = sprintf("%02d:00:00", $time); // Default 1-hour slots
                echo "<tr>";
                echo "<td>$time:00</td>";

                foreach ($grounds as $ground) {
                    if (isset($mergedCells[$ground][$time])) {
                        continue; // Skip merged cells
                    }

                    $isBooked = false;
                    $rowspan = 1;

                    foreach ($booked_slots as $slot) {
                        // die('data'.$slot['ground']);
                        if ($slot['ground'] === $ground && $slot['start'] == $timeFormatted) {
                            $isBooked = true;
                            $startHour = (int)substr($slot['start'], 0, 2);
                            $endHour = (int)substr($slot['end'], 0, 2);
                            $rowspan = $endHour - $startHour;

                            for ($i = 1; $i < $rowspan; $i++) {
                                $mergedCells[$ground][$time + $i] = true;
                            }
                            break;
                        }
                    }

                    if ($isBooked) {
                        $endTimeFormatted = sprintf("%02d:00:00", $endHour);
                        echo "<td rowspan='$rowspan' class='bg-danger text-white' style='cursor: pointer;'>";
echo "<button class='btn btn-light' 
        onclick=\"openModal('$timeFormatted', '$endTimeFormatted', '$ground')\">
        View
      </button>";
echo "</td>";


                    } else {
                        echo "<td class='clickable-cell' 
                                data-bs-toggle='modal' 
                                data-bs-target='#newBookingModal' 
                                data-time='$timeFormatted' 
                                data-ground='$ground'> 
                              -
                              </td>";
                    }
                }
                echo "</tr>";
            }
        } elseif ($view == 'month') {
            $months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
               
                     
            echo "<tbody>";
        
            foreach ($months as $index => $mon) {
                echo "<tr>";
                echo "<td>$mon</td>";
        
                foreach ($grounds as $ground) {
                    $isBooked = isset($booked_details[$index + 1][$ground]) ? "bg-danger text-white clickable-cell" : "";
        
                    if ($isBooked) {
                        $detailsList = $booked_details[$index + 1][$ground];
                        $encodedDetails = htmlspecialchars(json_encode($detailsList), ENT_QUOTES, 'UTF-8');
                    
                        echo "<td class='$isBooked' 
                                  data-bs-toggle='modal' 
                                  data-bs-target='#bookingModal'
                                  data-details='$encodedDetails'>
                                  <button class='btn btn-light'>View</button>
                              </td>";
                    }
                     else {
                        echo "<td>-</td>"; // Empty cell if not booked
                    }
                }
                echo "</tr>";
            }
        }
        elseif ($view == 'year') {
            // Yearly view (Last 10 Years)
            $currentYear = date('Y');
            for ($i = 0; $i < 10; $i++) {
                $year = $currentYear - $i;
                echo "<tr>";
                echo "<td>$year</td>";
                echo "</tr>";
            }
        }
        ?>
    </tbody>
</table>

        </div>
    </div>
</div>



<!-- New Booking Modal -->
<div class="modal fade" id="newBookingModal" tabindex="-1" aria-labelledby="newBookingModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg"> <!-- Use modal-lg or modal-xl for larger width -->
        <div class="modal-content">
            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            <?php include 'new_booking.php'; ?>
        </div>
    </div>
</div>



<!-- View Booking Modal -->
<!-- View Booking Modal -->
<!-- Custom Modal -->
<!-- View Booking Modal -->
<div id="viewModal" class="modal fade">
    <div class="modal-dialog modal-dialog-scrollable"> <!-- Bootstrap class for scrolling -->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">View Booking</h4>
                <button type="button" class="btn-close" onclick="closeModal()"></button>
            </div>
            <div class="modal-body" id="view-modal-body">
                <!-- Booking details will be inserted here -->
            </div>
        </div>
    </div>
</div>




<!-- Edit Booking Modal -->
<div class="modal fade" id="editModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Edit Booking</h4>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body" id="edit-modal-body">
        <!-- Edit Booking Details will be inserted here -->
      </div>
    </div>
  </div>
</div>
 
<div class="modal fade" id="bookingModal" tabindex="-1" aria-labelledby="bookingModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bookingModalLabel">Booking Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modal-body-content">
    <!-- Dynamic content will be inserted here -->
</div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
function openModal(startTime, endTime, ground) {
    fetch(`fetch_booking.php?start_time=${startTime}&end_time=${endTime}&ground=${ground}`)
    .then(response => response.text())
    .then(html => {
        document.getElementById("view-modal-body").innerHTML = html; // Insert fetched content
        document.getElementById("viewModal").style.display = "block"; // Show modal manually
        document.getElementById("viewModal").classList.add("show"); // Add Bootstrap's "show" class
    })
    .catch(error => console.error("Error:", error));
}

// Function to close modal
function closeModal() {
    document.getElementById("viewModal").style.display = "none"; // Hide modal manually
    document.getElementById("viewModal").classList.remove("show"); // Remove Bootstrap's "show" class
}

// Function to fetch and open the Edit Booking Modal
function openEditModal(bookingId) {
    fetch(`fetch_edit_booking.php?id=${bookingId}`)
    .then(response => response.text()) // Fetch the HTML content
    .then(html => {
        document.getElementById('edit-modal-body').innerHTML = html; // Insert content
        let modal = document.getElementById('editModal');
        modal.style.display = "block";  // Show modal manually
        modal.classList.add("show");    // Add Bootstrap's "show" class
    })
    .catch(error => console.error('Error:', error));
}

// Function to close modal
function closeEditModal() {
    let modal = document.getElementById('editModal');
    modal.style.display = "none";  // Hide modal manually
    modal.classList.remove("show"); // Remove Bootstrap's "show" class
}

</script>
<script>
function confirmDelete() {
    let bookingId = document.getElementById('booking_id').value;
    if (confirm("Are you sure you want to delete this booking?")) {
        window.location.href = "delete_booking.php?id=" + bookingId;
    }
}
</script>

<script>
document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.clickable-cell').forEach(cell => {
        cell.addEventListener('click', function() {
            const details = JSON.parse(this.getAttribute('data-details'));

            const container = document.querySelector('#modal-body-content');
            container.innerHTML = ''; // Clear previous

            details.forEach(detail => {
                container.innerHTML += `
                    <hr>
                    <p><strong>Date:</strong> ${detail.date}</p>
                    <p><strong>Start Time:</strong> ${detail.start_time}</p>
                    <p><strong>End Time:</strong> ${detail.end_time}</p>
                `;
            });
        });
    });
});
</script>

</body>
</html>
