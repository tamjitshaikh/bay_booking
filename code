#########################################Start to index.php#################################################
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bay Booking System</title>
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>
<body>


<!-- Navbar -->
<?php include 'navbar.php'; ?>

<?php
// index.php
include 'config.php';
include 'db.php';

date_default_timezone_set('Asia/Kolkata'); // Set timezone

// Get the selected date from query parameters or default to today
$selected_date = isset($_GET['date']) ? $_GET['date'] : date('Y-m-d');

// Prepare query to fetch the bookings for the selected date
$query = "SELECT requisition_no, start_time, end_time, ground_type FROM bookings WHERE DATE(proposed_date_time) = ? AND is_deleted = 0";
$stmt = $conn->prepare($query);
$stmt->bind_param("s", $selected_date);
$stmt->execute();
$result = $stmt->get_result();

// Store the booked slots in an array
$booked_slots = [];

while ($row = $result->fetch_assoc()) {
    $start_time = date('H:00:00', strtotime($row['start_time']));
    $end_time = date('H:00:00', strtotime($row['end_time']));

    $current_time = strtotime($start_time);
    $end_time_timestamp = strtotime($end_time);

    while ($current_time < $end_time_timestamp) {
        $temp_data = [
            'start' => date('H:00:00', $current_time),
            'end'   => date('H:00:00', $end_time_timestamp),
            'ground' => $row['ground_type'],
            'requisition_no' => $row['requisition_no']
        ];
        $booked_slots[] = $temp_data; // Add to main array
        $current_time = strtotime('+1 hour', $current_time);
    }
}


$stmt->close();

// Date navigation logic
$prev_date = date('Y-m-d', strtotime($selected_date . ' -1 day'));
$next_date = date('Y-m-d', strtotime($selected_date . ' +1 day'));
$selected_day = date('l', strtotime($selected_date));
$selected_month = date('m', strtotime($selected_date));
$selected_year = date('Y', strtotime($selected_date));

// Define available grounds
// Fetch ground names dynamically from ground_master table
$grounds = [];
$query = "SELECT ground_name FROM ground_master";
$result = $conn->query($query);

while ($row = $result->fetch_assoc()) {
    $grounds[] = $row['ground_name'];
}


$mergedCells = [];
?>

<div class="maindiv mt-4">
    <h2 class="mb-3 text-center">Bay Booking System</h2>
    <div class="row">
        <div class="col-lg-2 col-md-2">
            <?php include 'calendar.php'; ?>
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#newBookingModal">
                New Booking
            </button>
        </div>
        <div class="col-lg-10 col-md-10" style="  padding-left: 60px;  padding-right: 15px;">
        <div class="row">
                <div class="col-lg-6 col-md-6 d-flex mb-2">
                    <a href="?date=<?= $prev_date ?>&month=<?= $selected_month ?>&year=<?= $selected_year ?>" class="btn btn-secondary btn-sm">&#9665;</a>
                    <a class="btn btn-secondary btn-sm"><?= $selected_date ?></a>
                    <a href="?date=<?= $next_date ?>&month=<?= $selected_month ?>&year=<?= $selected_year ?>" class="btn btn-secondary btn-sm">&#9655;</a>
                </div>  
                <div class="col-lg-6 col-md-6 d-flex justify-content-end mb-2">
    <a href="?view=day&date=<?= $selected_date ?>" class="btn btn-secondary btn-sm">Day</a>
    <a href="?view=month&year=<?= $selected_year ?>" class="btn btn-secondary btn-sm">Month</a>
    <a href="?view=year" class="btn btn-secondary btn-sm">Year</a>
</div>

            </div>
        
            
            <table class="table table-bordered table-striped">
    <thead class="table-dark">
    <tr>
            <th colspan="5" class="text-center">
                <a href="?date=<?= $prev_date ?>" class="btn btn-secondary">&#9665;</a>
                <?= $selected_day ?>, <?= $selected_date ?>
                <a href="?date=<?= $next_date ?>" class="btn btn-secondary">&#9655;</a>
            </th>
        </tr>
        <tr>
    <th class="text-center">
        <?php 
        // Determine the view mode (default to 'day' if not set)
        $view = isset($_GET['view']) ? $_GET['view'] : 'day';

        if ($view == 'day') {
            echo "$selected_day, $selected_date"; 
        } elseif ($view == 'month') {
            echo "Year: $selected_year";
        } elseif ($view == 'year') {
            echo "Last 10 Years";
        }
        ?>
    </th>

    <?php 
    // Display ground names dynamically
    foreach ($grounds as $ground) { 
        echo "<th>" . htmlspecialchars($ground) . "</th>"; 
    }
    ?>
</tr>

    </thead>
    <tbody>
        <?php
        if ($view == 'day') {
            // Daily view (9 AM - 7 PM) with booking logic
            for ($time = 9; $time < 20; $time++) { 
                $timeFormatted = sprintf("%02d:00:00", $time);
                $endTimeFormatted = sprintf("%02d:00:00", $time); // Default 1-hour slots
                echo "<tr>";
                echo "<td>$time:00</td>";

                foreach ($grounds as $ground) {
                    if (isset($mergedCells[$ground][$time])) {
                        continue; // Skip merged cells
                    }

                    $isBooked = false;
                    $rowspan = 1;

                    foreach ($booked_slots as $slot) {
                        // die('data'.$slot['ground']);
                        if ($slot['ground'] === $ground && $slot['start'] == $timeFormatted) {
                            $isBooked = true;
                            $startHour = (int)substr($slot['start'], 0, 2);
                            $endHour = (int)substr($slot['end'], 0, 2);
                            $rowspan = $endHour - $startHour;

                            for ($i = 1; $i < $rowspan; $i++) {
                                $mergedCells[$ground][$time + $i] = true;
                            }
                            break;
                        }
                    }

                    if ($isBooked) {
                        $endTimeFormatted = sprintf("%02d:00:00", $endHour);
                        echo "<td rowspan='$rowspan' class='bg-danger text-white' style='cursor: pointer;'>";
                        echo "<button class='btn btn-light' data-bs-toggle='modal' data-bs-target='#myModal' 
        onclick=\"openModal('$timeFormatted', '$endTimeFormatted', '$ground')\">View</button>";
                        echo "</td>";


                    } else {
                        echo "<td class='clickable-cell' 
                                data-bs-toggle='modal' 
                                data-bs-target='#newBookingModal' 
                                data-time='$timeFormatted' 
                                data-ground='$ground'> 
                              -
                              </td>";
                    }
                }
                echo "</tr>";
            }
        } elseif ($view == 'month') {
            // Monthly view (January - December)
            $months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
            foreach ($months as $month) {
                echo "<tr>";
                echo "<td>$month</td>";
                echo "</tr>";
            }
        } elseif ($view == 'year') {
            // Yearly view (Last 10 Years)
            $currentYear = date('Y');
            for ($i = 0; $i < 10; $i++) {
                $year = $currentYear - $i;
                echo "<tr>";
                echo "<td>$year</td>";
                echo "</tr>";
            }
        }
        ?>
    </tbody>
</table>

        </div>
    </div>
</div>



<!-- New Booking Modal -->
<div class="modal fade" id="newBookingModal" tabindex="-1" aria-labelledby="newBookingModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <?php include 'new_booking.php'; ?>
        </div>
    </div>
</div>


<!-- View Booking Modal -->
<!-- View Booking Modal -->
<div class="modal fade" id="viewModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">View Booking</h4>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body" id="view-modal-body">
        <!-- View Booking Details will be inserted here -->
      </div>
    </div>
  </div>
</div>

<!-- Edit Booking Modal -->
<div class="modal fade" id="editModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Edit Booking</h4>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body" id="edit-modal-body">
        <!-- Edit Booking Details will be inserted here -->
      </div>
    </div>
  </div>
</div>
 


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
function openModal(startTime, endTime, ground) {
    fetch(`fetch_booking.php?start_time=${startTime}&end_time=${endTime}&ground=${ground}`)
    .then(response => response.text()) // Fetch HTML
    .then(html => {
        document.getElementById('view-modal-body').innerHTML = html; // Insert View Modal Content
        new bootstrap.Modal(document.getElementById('viewModal')).show(); // Show View Modal
    })
    .catch(error => console.error('Error:', error));
}

// Function to fetch and open the Edit Booking Modal
function openEditModal(bookingId) {
    fetch(`fetch_edit_booking.php?id=${bookingId}`)
    .then(response => response.text()) // Fetch HTML
    .then(html => {
        document.getElementById('edit-modal-body').innerHTML = html; // Insert Edit Modal Content
        new bootstrap.Modal(document.getElementById('editModal')).show(); // Show Edit Modal
    })
    .catch(error => console.error('Error:', error));
}


</script>
<script>
function confirmDelete() {
    let bookingId = document.getElementById('booking_id').value;
    if (confirm("Are you sure you want to delete this booking?")) {
        window.location.href = "delete_booking.php?id=" + bookingId;
    }
}
</script>

</body>
</html>


*****************************************end of index.php****************************************************

#########################################Start to calendar.php#################################################
<div class="col-lg-3 col-md-3">
  <div class="calendar-nav d-flex justify-content-between align-items-center">
    <a href="?month=<?= ($month == 1) ? 12 : $month - 1; ?>&year=<?= ($month == 1) ? $year - 1 : $year; ?>&date=<?= $selected_date; ?>" class="btn" style="float: right;">&#9665;</a>
    <h6 class="mb-0"><?= date('F Y', strtotime("$year-$month-01")); ?></h6>
    <a href="?month=<?= ($month == 12) ? 1 : $month + 1; ?>&year=<?= ($month == 12) ? $year + 1 : $year; ?>&date=<?= $selected_date; ?>" class="btn" style="float: left;">&#9655;</a>
  </div>

  <table class="calendar">
    <thead>
      <tr>
        <th>Sun</th>
        <th>Mon</th>
        <th>Tue</th>
        <th>Wed</th>
        <th>Thu</th>
        <th>Fri</th>
        <th>Sat</th>
      </tr>
    </thead> 
    <tbody>
      <?php
      $dayCounter = 1;
      for ($row = 0; $row < 6; $row++) {
        echo "<tr>";
        for ($col = 0; $col < 7; $col++) {
          if ($row === 0 && $col < $firstDayOfMonth || $dayCounter > $daysInMonth) {
            echo "<td></td>";
          } else {
            $date_value = "$year-$month-" . str_pad($dayCounter, 2, '0', STR_PAD_LEFT);
            $class = ($date_value == $selected_date) ? 'selected-day' : '';
            $class .= (date('Y-m-d') == $date_value) ? ' current-day' : ''; // Highlight today's date
            echo "<td class='$class'><a href='?month=$month&year=$year&date=$date_value'>$dayCounter</a></td>";
            $dayCounter++;
          }
        }
        echo "</tr>";
        if ($dayCounter > $daysInMonth) break;
      }
      ?>
    </tbody>
  </table>
</div>


*****************************************end of calendar.php****************************************************


#########################################Start to fetch_booking.php#################################################
<?php
include 'db.php';

if (isset($_GET['start_time'], $_GET['end_time'], $_GET['ground'])) {
    $start_time = $_GET['start_time'];
    $end_time = $_GET['end_time'];
    $ground = $_GET['ground'];

    $query = "SELECT * FROM bookings WHERE start_time = ? AND end_time = ? AND ground_type = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("sss", $start_time, $end_time, $ground);
    $stmt->execute(); 
    $result = $stmt->get_result();
    $booking = $result->fetch_assoc();

    if (!$booking) {
        echo "<p class='text-danger'>Booking not found.</p>";
        exit;
    }

    // Return View Booking HTML (Read-Only)
    echo "
    <div class='mb-3'>
        <label class='form-label'>Requisition No</label>
        <input type='text' class='form-control' value='" . htmlspecialchars($booking['requisition_no']) . "' readonly>
    </div>

    <div class='mb-3'>
        <label class='form-label'>Date of Requisition</label>
        <input type='date' class='form-control' value='" . htmlspecialchars($booking['date_of_requisition']) . "' readonly>
    </div>

    <div class='mb-3'>
        <label class='form-label'>Name of Division</label>
        <input type='text' class='form-control' value='" . htmlspecialchars($booking['division']) . "' readonly>
    </div>

    <div class='mb-3'>
        <label class='form-label'>Proposed Date and Time</label>
        <input type='datetime-local' class='form-control' value='" . htmlspecialchars($booking['proposed_date_time']) . "' readonly>
    </div>

    <div class='mb-3'>
        <label class='form-label'>Start Time</label>
        <input type='time' class='form-control' value='" . htmlspecialchars($booking['start_time']) . "' readonly>
    </div>

    <div class='mb-3'>
        <label class='form-label'>End Time</label>
        <input type='time' class='form-control' value='" . htmlspecialchars($booking['end_time']) . "' readonly>
    </div>

    <div class='mb-3'>
        <label class='form-label'>Select Ground</label>
        <input type='text' class='form-control' value='" . htmlspecialchars($booking['ground_type']) . "' readonly>
    </div>

    <button type='button' class='btn btn-primary' onclick='openEditModal(" . $booking['id'] . ")'>Update Booking</button>
    ";
}
?>

*****************************************END of fetch_booking.php****************************************************

#########################################Start to fetch_edit_booking.php#################################################
<?php
include 'db.php';

if (isset($_GET['id'])) {
    $booking_id = $_GET['id'];

    $query = "SELECT * FROM bookings WHERE id = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("i", $booking_id);
    $stmt->execute(); 
    $result = $stmt->get_result();
    $booking = $result->fetch_assoc();

    if (!$booking) {
        echo "<p class='text-danger'>Booking not found.</p>";
        exit;
    }

    // Return Edit Booking HTML
    echo "
    <form action='update_booking.php' method='POST'>
        <input type='hidden' name='booking_id' value='" . htmlspecialchars($booking['id']) . "'>

        <div class='mb-3'>
            <label class='form-label'>Requisition No</label>
            <input type='text' class='form-control' name='requisition_no' value='" . htmlspecialchars($booking['requisition_no']) . "'>
        </div>

        <div class='mb-3'>
            <label class='form-label'>Date of Requisition</label>
            <input type='date' class='form-control' name='date_of_requisition' value='" . htmlspecialchars($booking['date_of_requisition']) . "'>
        </div>

        <div class='mb-3'>
            <label class='form-label'>Name of Division</label>
            <input type='text' class='form-control' name='division' value='" . htmlspecialchars($booking['division']) . "'>
        </div>

        <div class='mb-3'>
            <label class='form-label'>Proposed Date and Time</label>
            <input type='datetime-local' class='form-control' name='proposed_date_time' value='" . htmlspecialchars($booking['proposed_date_time']) . "'>
        </div>

        <div class='mb-3'>
            <label class='form-label'>Start Time</label>
            <input type='time' class='form-control' name='start_time' value='" . htmlspecialchars($booking['start_time']) . "'>
        </div>

        <div class='mb-3'>
            <label class='form-label'>End Time</label>
            <input type='time' class='form-control' name='end_time' value='" . htmlspecialchars($booking['end_time']) . "'>
        </div>

        <div class='mb-3'>
            <label class='form-label'>Select Ground</label>
            <select class='form-control' name='ground'>
                <option value='old_bay' " . ($booking['ground_type'] == 'old_bay' ? 'selected' : '') . ">Old Bay</option>
                <option value='new_bay' " . ($booking['ground_type'] == 'new_bay' ? 'selected' : '') . ">New Bay</option>
                <option value='eds' " . ($booking['ground_type'] == 'eds' ? 'selected' : '') . ">EDS</option>
                <option value='waste_burning' " . ($booking['ground_type'] == 'waste_burning' ? 'selected' : '') . ">Waste Burning</option>
            </select>
        </div>

        <button type='submit' class='btn btn-success'>Save Changes</button>
    </form>";
}
?>


*****************************************END of fetch_edit_booking.php****************************************************


#########################################Start to navbar.php#################################################
<nav class="navbar navbar-expand-lg navbar-dark" style="background-color: #007BFF;">
    <div class="container-fluid">
        <div class="w-100 d-flex justify-content-center">
            <a class="navbar-brand text-center" href="#">Bay Booking System</a>
        </div>
        <div class="d-flex ms-auto">
            <form class="d-flex">
                <input class="form-control me-2" type="date" aria-label="Search">
                <button class="btn btn-outline-light" type="submit">Search</button>
            </form>
        </div>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link active" href="index.php">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Help</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Log in</a>
                </li>
            </ul>
        </div>
    </div>
</nav>

*****************************************END of navbar.php****************************************************
#########################################Start to new_booking.php#################################################



<?php
// Include database connection
include 'db.php';

// Initialize variables
$requisition_no = ""; 

// Fetch the last requisition_no from the database
$last_query = "SELECT requisition_no FROM bookings ORDER BY id DESC LIMIT 1";
$last_result = $conn->query($last_query);
$last_row = $last_result->fetch_assoc();

if ($last_row) {
    // Extract the number from the last requisition_no (e.g., HE/Bay/10 → 10)
    preg_match('/(\d+)$/', $last_row['requisition_no'], $matches);
    $last_number = isset($matches[1]) ? intval($matches[1]) : 0;
} else {
    $last_number = 0; // No previous record, start from 1
}

// Increment the number
$new_number = $last_number + 1;

// Generate the new requisition_no
$requisition_no = "HE/Bay/" . $new_number;

// Process the form when it is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get form data
    $date_of_requisition = $_POST['date_of_requisition'];
    $division = $_POST['division'];
    $proposed_date_time = $_POST['proposed_date_time'];
    $start_time = $_POST['start_time'];
    $end_time = $_POST['end_time'];
    $ground_type = $_POST['ground_type'];
    $external_users = isset($_POST['external_users']) ? $_POST['external_users'] : [];

    // Check if the selected ground is already booked for the chosen date and time slot
    $check_query = "SELECT * FROM bookings WHERE ground_type = ? 
                    AND DATE(proposed_date_time) = ? 
                    AND ((start_time <= ? AND end_time > ?) OR (start_time < ? AND end_time >= ?))";

    if ($stmt = $conn->prepare($check_query)) {
        $stmt->bind_param("ssssss", $ground_type, $proposed_date_time, $end_time, $end_time, $start_time, $start_time);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo "<script>alert('This ground is already booked for the selected time slot. Please choose another time.');</script>";
        } else {
            // Insert booking data
            $insert_query = "INSERT INTO bookings (requisition_no, date_of_requisition, division, proposed_date_time, start_time, end_time, ground_type) 
                             VALUES (?, ?, ?, ?, ?, ?, ?)";

            if ($stmt = $conn->prepare($insert_query)) {
                $stmt->bind_param("sssssss", $requisition_no, $date_of_requisition, $division, $proposed_date_time, $start_time, $end_time, $ground_type);
                $stmt->execute();
                $booking_id = $conn->insert_id; // Get last inserted booking ID

                if ($stmt->affected_rows > 0) {
                    // Insert External Users into a separate table
                    foreach ($external_users as $user) {
                        $name = $user['name'];
                        $contact = $user['contact'];
                        $id = $user['id'];

                        $ext_query = "INSERT INTO external_users (booking_id, name, contact, id_no) VALUES (?, ?, ?, ?)";
                        if ($ext_stmt = $conn->prepare($ext_query)) {
                            $ext_stmt->bind_param("isss", $booking_id, $name, $contact, $id);
                            $ext_stmt->execute();
                        }
                    }
                    echo "<script>alert('Booking successful!'); window.location.href='index.php';</script>";
                } else {
                    echo "<script>alert('Error in booking!');</script>";
                }
            } else {
                echo "<script>alert('Error preparing insert query: " . $conn->error . "');</script>";
            }
        }
        $stmt->close();
    } else {
        echo "<script>alert('Error preparing check query: " . $conn->error . "');</script>";
    }
}

// Fetch ground names dynamically from ground_master table
$grounds = [];
$query = "SELECT ground_name FROM ground_master";
$result = $conn->query($query);

while ($row = $result->fetch_assoc()) {
    $grounds[] = $row['ground_name'];
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>New Booking</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>
<body>

<div class="container mt-4">
    <h2 class="mb-3 text-center">New Booking</h2>

    <form action="new_booking.php" method="POST">
        <div class="mb-3">
            <label for="requisition_no" class="form-label">Requisition No</label>
            <input type="text" class="form-control" name="requisition_no" value="<?= $requisition_no ?>" readonly>
        </div>

        <div class="mb-3">
            <label for="date_of_requisition" class="form-label">Date of Requisition</label>
            <input type="date" class="form-control" name="date_of_requisition" value="<?= date('Y-m-d') ?>" readonly>
        </div>

        <div class="mb-3">
            <label for="division" class="form-label">Name of Division</label>
            <input type="text" class="form-control" name="division" required>
        </div>

        <div class="mb-3">
            <label for="proposed_date_time" class="form-label">Proposed Date and Time</label>
            <input type="datetime-local" class="form-control" name="proposed_date_time" required>
        </div>

        <div class="mb-3">
            <label for="start_time" class="form-label">Start Time</label>
            <input type="time" class="form-control" name="start_time" min="09:00" max="18:00" required>
        </div>

        <div class="mb-3">
            <label for="end_time" class="form-label">End Time</label>
            <input type="time" class="form-control" name="end_time" min="09:00" max="18:00" required>
        </div>

        <div class="mb-3">
            <label for="external_count" class="form-label">Number of External Users</label>
            <input type="number" class="form-control" id="external_count" name="external_count" min="0" max="10" onchange="generateExternalUserTable()">
        </div>

        <div class="mb-3">
            <label class="form-label">External Users Details</label>
            <table class="table table-bordered" id="external_user_table" style="display: none;">
                <thead class="table-dark">
                    <tr>
                        <th>Name</th>
                        <th>Contact</th>
                        <th>ID</th>
                    </tr>
                </thead>
                <tbody id="external_user_tbody"></tbody>
            </table>
        </div>

        <div class="mb-3">
            <label for="ground_type" class="form-label">Select Ground</label>
            <select class="form-control" name="ground_type" required>
                <option value="">-- Select Ground --</option>
                <?php foreach ($grounds as $ground) : ?>
                    <option value="<?= htmlspecialchars($ground) ?>"><?= htmlspecialchars($ground) ?></option>
                <?php endforeach; ?>
            </select>
        </div>

        <button type="submit" class="btn btn-primary">Book Slot</button>
    </form>
</div>

<script>
function generateExternalUserTable() {
    let count = document.getElementById("external_count").value;
    let tbody = document.getElementById("external_user_tbody");
    tbody.innerHTML = "";
    if (count > 0) {
        document.getElementById("external_user_table").style.display = "table";
        for (let i = 1; i <= count; i++) {
            tbody.innerHTML += `<tr>
                <td><input type="text" class="form-control" name="external_users[${i}][name]" required></td>
                <td><input type="text" class="form-control" name="external_users[${i}][contact]" required></td>
                <td><input type="text" class="form-control" name="external_users[${i}][id]" required></td>
            </tr>`;
        }
    }
}
</script>
</body>
</html>


*****************************************END of new_booking.php****************************************************

#########################################Start to update_booking.php#################################################
<?php
include 'db.php';

function getUserIP() {
    $ip = 'UNKNOWN';

    if (!empty($_SERVER['HTTP_CLIENT_IP'])) {
        $ip = $_SERVER['HTTP_CLIENT_IP'];
    } elseif (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])) {
        $ip = trim(explode(',', $_SERVER['HTTP_X_FORWARDED_FOR'])[0]); // Get first IP
    } elseif (!empty($_SERVER['REMOTE_ADDR'])) {
        $ip = $_SERVER['REMOTE_ADDR'];
    }

    // Handle localhost (::1) and get LAN IP
    if ($ip === '::1' || $ip === '127.0.0.1') {
        $ip = getHostByName(getHostName()); 
    }

    return $ip;
}

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $booking_id = $_POST['booking_id'];
    $proposed_date_time = $_POST['proposed_date_time'];
    $end_time = $_POST['end_time'];
    $ground = $_POST['ground'];
    $user_ip = getUserIP(); // ✅ Get current user's IP

    // Fetch current edit_ip_user to append new IP
    $query = "SELECT edit_ip_user FROM bookings WHERE id = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("i", $booking_id);
    $stmt->execute();
    $stmt->bind_result($existing_ips);
    $stmt->fetch();
    $stmt->close();

    // ✅ Ensure existing_ips is a string and append new IP
    $existing_ips = $existing_ips ? $existing_ips . ", " . $user_ip : $user_ip;

    // ✅ Update booking and store updated IPs
    $update_query = "UPDATE bookings SET proposed_date_time = ?, end_time = ?, ground_type = ?, edit_ip_user = ? WHERE id = ?";
    $stmt = $conn->prepare($update_query);
    $stmt->bind_param("ssssi", $proposed_date_time, $end_time, $ground, $existing_ips, $booking_id);

    if ($stmt->execute()) {
        echo "<script>alert('Booking updated successfully!'); window.location.href='index.php';</script>";
    } else {
        echo "<script>alert('Error updating booking!');</script>";
    }

    $stmt->close();
}
?>


*****************************************END of update_bokking.php****************************************************
#########################################Start to login.php#################################################
<?php
session_start();

// If user is already logged in, redirect to new_booking.php
if (isset($_SESSION['user_id'])) {
    header("Location: new_booking.php");
    exit;
}

$error = isset($_GET['error']) ? $_GET['error'] : '';
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>
<body>

<div class="container mt-5">
    <h2 class="mb-3 text-center">User Login</h2>
    
    <?php if ($error): ?>
        <div class="alert alert-danger"><?= htmlspecialchars($error) ?></div>
    <?php endif; ?>

    <form action="authenticate.php" method="POST">
        <div class="mb-3">
            <label for="username" class="form-label">Username</label>
            <input type="text" class="form-control" name="username" required>
        </div>

        <div class="mb-3">
            <label for="password" class="form-label">Password</label>
            <input type="password" class="form-control" name="password" required>
        </div>

        <button type="submit" class="btn btn-primary">Login</button>
    </form>
</div>

</body>
</html>

*****************************************END of login.php#################################################
#########################################Start to authenticate.php#################################################
<?php
session_start();
include 'db.php'; // Ensure this file connects to your MySQL database

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Prepare statement to prevent SQL injection
    $query = "SELECT id, password FROM users WHERE username = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();
    $user = $result->fetch_assoc();

    if ($user && password_verify($password, $user['password'])) {
        // Authentication successful - Set session variables
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $username;

        header("Location: new_booking.php"); // Redirect to booking page
        exit;
    } else {
        // Authentication failed - Redirect back to login page with error
        header("Location: login.php?error=Invalid Username or Password");
        exit;
    }
}
?>



CREATE TABLE ground_booking_system.external_users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    booking_id INT NOT NULL,
    name VARCHAR(255) NOT NULL,
    contact VARCHAR(15) NOT NULL,
    id_no VARCHAR(50) NOT NULL,
    FOREIGN KEY (booking_id) REFERENCES bookings(id) ON DELETE CASCADE
);

CREATE TABLE ground_booking_system.users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL
);

ALTER TABLE ground_booking_system.users ADD COLUMN role ENUM('admin', 'superadmin', 'user', 'seduser') NOT NULL DEFAULT 'user';
